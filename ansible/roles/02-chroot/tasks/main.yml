---
- name: generate en_US.UTF-8 locale #TODO add more locales, guide mentions en_US.UTF-8 should always be present though
  shell: locale-gen en_US.UTF-8
- name: set LANG in /etc/default/locale
  lineinfile:
    line: LANG=en_US.UTF-8
    path: /etc/default/locale
    insertafter: EOF
- name: set timezone
  shell: echo CST6CDT > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata
- name: ln -s /proc/self/mounts /etc/mtab
  file:
    src: /proc/self/mounts
    dest: /etc/mtab
    state: link
- name: update apt cache
  apt:
    update_cache: yes
- name: install our kernel
  apt:
    name: linux-image-generic
    install_recommends: no
    state: present
- name: install zfs-initramfs
  apt:
    name: zfs-initramfs
    state: present
- name: install grub-pc
  apt:
    name: grub-pc
    state: present
  when: (zfsprep_efi != true)
- apt:
    name: dosfstools
    state: present
  when: (zfsprep_efi == true)
- name: set up grub partitions for efi
  shell: "mkdosfs -F32 -n EFI {{ item }}"
  with_items:
    - "{{ zfsprep_root_device_list | map('regex_replace', '(.*)', '\\g<1>' + zfsprep_boot_part_append) | list  }}"
  when: (zfsprep_efi == true)
- name: create efi mountpoint
  file:
    path: /boot/efi
    state: directory
  when: (zfsprep_efi == true)
- name: update fstab with efi #TODO - add backup entries for other disks that are members of the root volume, by-id logic
  shell: echo PARTUUID=$(blkid -s PARTUUID -o value /dev/sda3) /boot/efi vfat nofail,x-systemd.device-timeout=1 0 1 >> /etc/fstab && mount /boot/efi
  when: (zfsprep_efi == true)
- name: install grub-efi-amd64
  apt:
    name: grub-efi-amd64
    state: present
  when: (zfsprep_efi == true)
- name: set root password #hash below sets it to 'vagrant'
  user:
    name: root
    password: $6$TwdlMzLJ6B$qqj/8soZa5eURXAa54wkjneV5VZG4r664A3VbSrcl4upJwSiiH4o78uTXRhLPwQJP7mXpKShr849mCAs24lTX/
- name: fix mount race condition
  shell: "zfs set mountpoint=legacy {{ item }}"
  with_items:
    - "{{ zfsprep_root_pool }}/var/log"
    - "{{ zfsprep_root_pool }}/var/tmp"
- name: update fstab
  lineinfile:
    line: "{{ zfsprep_root_pool}}{{ item }} {{ item }} zfs defaults 0 0"
    path: /etc/fstab
    insertafter: EOF
  with_items:
    - /var/log
    - /var/tmp
- name: modify /etc/default/grub
  replace:
    path: /etc/default/grub
    regexp: "{{ item.regex }}"
    replace: "{{ item.replace }}"
  with_items:
    - regex: "^(GRUB_HIDDEN_TIMEOUT.*)"
      replace: "#\\1"
    - regex: "^GRUB_CMDLINE_LINUX_DEFAULT.*"
      replace: 'GRUB_CMDLINE_LINUX_DEFAULT=""'
    - regex: "^#(GRUB_TERMINAL.*)"
      replace: "\\1"
- shell: update-grub
- shell: "grub-install {{ item }}"
  with_items:
    - "{{ zfsprep_root_device_list }}"
  when: (zfsprep_efi != true)
- shell: "grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu --recheck --no-floppy && umount /boot/efi && mount /dev/sdb3 /boot/efi && grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu --recheck --no-floppy"
  when: (zfsprep_efi == true)
- name: ensure zfs.target starts on boot
  systemd:
    name: zfs.target
    enabled: yes
- name: install firstboot service
  template:
    src: firstboot.service.j2
    dest: /lib/systemd/system/firstboot.service
- name: install firstboot script
  template:
    src: firstboot.j2
    dest: /opt/firstboot
    mode: 0777
- name: enable firstboot service
  systemd:
    name: firstboot.service
    enabled: yes
